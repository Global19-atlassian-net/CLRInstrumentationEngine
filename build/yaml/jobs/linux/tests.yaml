# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Job Template: Test Linux Binaries

jobs:
- job: Test_Linux_Binaries
  displayName: Linux Tests

  strategy:
    matrix:
      core31_alpine3_12:
        containerName: core31_alpine3_12_tests
        testImageName: mcr.microsoft.com/dotnet/runtime:3.1-alpine3.12
      core31_bionic:
        containerName: core31_bionic_tests
        testImageName: mcr.microsoft.com/dotnet/runtime:3.1-bionic
      core31_buster_slim:
        containerName: core31_buster_slim_tests
        testImageName: mcr.microsoft.com/dotnet/runtime:3.1-buster-slim
      core31_focal:
        containerName: core31_focal_tests
        testImageName: mcr.microsoft.com/dotnet/runtime:3.1-focal
      net50_alpine3_12:
        containerName: net50_alpine3_12_tests
        testImageName: mcr.microsoft.com/dotnet/runtime:5.0-alpine3.12
      net50_buster_slim:
        containerName: net50_buster_slim_tests
        testImageName: mcr.microsoft.com/dotnet/runtime:5.0-buster-slim
      net50_focal:
        containerName: net50_focal_tests
        testImageName: mcr.microsoft.com/dotnet/runtime:5.0-focal

  pool:
    vmImage: ubuntu-20.04
    demands:
    - docker
    - pwsh

  workspace:
    clean: outputs

  steps:
  - checkout: self
    clean: true

  # - bash: |
  #     apt-get update
  #     apt-get install -y wget apt-transport-https software-properties-common
  #     wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb
  #     dpkg -i packages-microsoft-prod.deb
  #     apt-get update
  #     apt-get install -y powershell
  #   displayName: Install PowerShell

  - script: >
      docker run -d
      --name $(containerName)
      $(testImageName)
      1> /tmp/$(containerName)_stdout
      2> /tmp/$(containerName)_stderr
    displayName: Start Test Container

  - script: >
      docker exec $(containerName) dotnet
      --list-runtimes
    displayName: List Runtimes
  
  - script: docker rm -f $(containerName)
    displayName: Cleanup Test Container
    condition: always()
    continueOnError: true

  - script: |
      echo "stdout:"
      cat /tmp/$(containerName)_stdout
      echo "stderr:"
      cat /tmp/$(containerName)_stderr
    displayName: Print stdout and stderr

  - template: ../../steps/azuredevops/componentgovernance.yaml